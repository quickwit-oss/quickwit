name: UI CI

on:
  workflow_dispatch:
  pull_request:
    paths:
      - "quickwit/quickwit-ui/**"
      - ".github/workflows/ui-ci.yml"
  push:
    branches:
      - main
      - trigger-ci-workflow
    paths:
      - "quickwit/quickwit-ui/**"
      - ".github/workflows/ui-ci.yml"

permissions:
  contents: read

jobs:
  tests:
    name: ${{ matrix.task.name }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write
    strategy:
      fail-fast: false
      matrix:
        task:
          - name: Cypress run
            command: |
              sudo apt-get -y install protobuf-compiler
              rustup show active-toolchain || rustup toolchain install
              CI=false yarn --cwd quickwit-ui build
              RUSTFLAGS="--cfg tokio_unstable" cargo build --features=postgres
              mkdir qwdata
              RUSTFLAGS="--cfg tokio_unstable" cargo run --features=postgres -- run --service searcher --service metastore --config ../config/quickwit.yaml &
              yarn --cwd quickwit-ui cypress run
          - name: Lint
            command: yarn --cwd quickwit-ui lint
          - name: Unit Test
            command: yarn --cwd quickwit-ui test
    services:
      # PostgreSQL service container
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: quickwit-dev
          POSTGRES_PASSWORD: quickwit-dev
          POSTGRES_DB: quickwit-metastore-dev
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      CARGO_INCREMENTAL: 0
      RUST_BACKTRACE: 1
      RUSTFLAGS: -Dwarnings -C lto=off
      RUSTDOCFLAGS: -Dwarnings -Arustdoc::private_intra_doc_links
      QW_TEST_DATABASE_URL: postgres://quickwit-dev:quickwit-dev@postgres:5432/quickwit-metastore-dev
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6.0.0
        with:
          node-version: 20
          cache: "yarn"
          cache-dependency-path: quickwit/quickwit-ui/yarn.lock
      - name: Install rustup
        run: curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain none -y
      - name: Install JS dependencies
        run: yarn --cwd quickwit-ui install
        working-directory: ./quickwit
      - name: Setup Rust cache
        if: matrix.task.name == 'Cypress run'
        uses: Swatinem/rust-cache@f13886b937689c021905a6b90929199931d60db1 # v2.8.1
        with:
          workspaces: "./quickwit -> target"
      - name: ${{ matrix.task.name }}
        run: ${{ matrix.task.command }}
        working-directory: ./quickwit
