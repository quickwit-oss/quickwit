name: Build and publish Docker images

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - "quickwit/**"
    tags:
      - airmail
      - happy-plazza
      - qw*
      - v*

permissions:
  contents: read

env:
  REGISTRY_IMAGE: quickwit/quickwit

jobs:
  docker:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux/amd64
            platform_suffix: amd64
          - os: gh-ubuntu-arm64
            platform: linux/arm64
            platform_suffix: arm64
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
      actions: write
    environment:
      name: production
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Login to Docker Hub
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5.8.0
        with:
          images: |
            ${{ env.REGISTRY_IMAGE }}
          labels: |
            org.opencontainers.image.title=Quickwit
            maintainer=Quickwit, Inc. <hello@quickwit.io>
            org.opencontainers.image.vendor=Quickwit, Inc.
            org.opencontainers.image.licenses=Apache-2.0

      - name: Retrieve commit date, hash, and tags
        run: |
          echo "QW_COMMIT_DATE=$(TZ=UTC0 git log -1 --format=%cd --date=format-local:%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_ENV
          echo "QW_COMMIT_HASH=$(git rev-parse HEAD)" >> $GITHUB_ENV
          echo "QW_COMMIT_TAGS=$(git tag --points-at HEAD | tr '\n' ',')" >> $GITHUB_ENV
          if [[ "${{ github.event_name }}" == "push" && "${{ github.ref_type }}" == "tag" && "${GITHUB_REF#refs/tags/}" == *"jemprof"* ]]; then
            echo "CARGO_FEATURES=release-jemalloc-profiled" >> $GITHUB_ENV
          else
            echo "CARGO_FEATURES=release-feature-set" >> $GITHUB_ENV
          fi

      - name: Build and push image
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        id: build
        with:
          context: .
          platforms: ${{ matrix.platform }}
          build-args: |
            QW_COMMIT_DATE=${{ env.QW_COMMIT_DATE }}
            QW_COMMIT_HASH=${{ env.QW_COMMIT_HASH }}
            QW_COMMIT_TAGS=${{ env.QW_COMMIT_TAGS }}
            CARGO_FEATURES=${{ env.CARGO_FEATURES }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: digest-${{ matrix.platform_suffix }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs: [docker]
    permissions:
      contents: read
      actions: read
    environment: production
    steps:
      - name: Download digests
        uses: actions/download-artifact@018cc2cf5baa6db3ef3c5f8a56943fffe632ef53 # v6.0.0
        with:
          pattern: digest-*
          path: /tmp/digests
          merge-multiple: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5.8.0
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          flavor: |
            latest=false
          tags: |
            type=edge,branch=main
            type=edge,branch=main,suffix=-slim-bookworm
            type=semver,pattern={{version}}
            type=semver,pattern={{version}},value=latest
            type=semver,pattern={{version}},suffix=-slim-bookworm
            type=ref,event=tag
      - name: Login to Docker Hub
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
      - name: Create manifest list and push tags
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}
