[package]
name = "quickwit-storage"
description = "Storage layer"

version.workspace = true
edition.workspace = true
homepage.workspace = true
documentation.workspace = true
repository.workspace = true
authors.workspace = true
license.workspace = true

[dependencies]
anyhow = { workspace = true }
async-trait = { workspace = true }
base64 = { workspace = true }
bytes = { workspace = true }
bytesize = { workspace = true }
fnv = { workspace = true }
futures = { workspace = true }
hyper = { workspace = true }
lru = { workspace = true }
md5 = { workspace = true }
mockall = { workspace = true, optional = true }
once_cell = { workspace = true }
pin-project = { workspace = true }
rand = { workspace = true }
regex = { workspace = true }
murmurhash32 = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
tantivy = { workspace = true }
tempfile = { workspace = true }
thiserror = { workspace = true }
tokio = { workspace = true, features = ["test-util"] }
tokio-stream = { workspace = true }
tokio-util = { workspace = true }
tracing = { workspace = true }
ulid = { workspace = true }

aws-config = { workspace = true }
aws-credential-types = { workspace = true }
aws-sdk-s3 = { workspace = true }
aws-smithy-types = { workspace = true }

azure_core = { workspace = true, optional = true }
azure_storage = { workspace = true, optional = true }
azure_storage_blobs = { workspace = true, optional = true }

quickwit-aws = { workspace = true }
quickwit-common = { workspace = true }
quickwit-config = { workspace = true }
quickwit-proto = { workspace = true }

opendal = { workspace = true, optional = true }
reqsign = { workspace = true, optional = true }
reqwest = { workspace = true, optional = true }

[dev-dependencies]
mockall = { workspace = true }
proptest = { workspace = true }
tokio = { workspace = true }
tracing-subscriber = { workspace = true }

aws-sdk-s3 = { workspace = true }
aws-smithy-runtime = { workspace = true, features = ["test-util"] }

quickwit-common = { workspace = true, features = ["testsuite"] }

[features]
azure = [
  "azure_core",
  "azure_storage",
  "azure_storage_blobs",
  "azure_core/enable_reqwest_rustls",
  "azure_storage/enable_reqwest_rustls",
  "azure_storage_blobs/enable_reqwest_rustls",
]
gcs = ["dep:opendal", "opendal/services-gcs"]
ci-test = []
integration-testsuite = [
  "azure",
  "azure_core/azurite_workaround",
  "azure_storage_blobs/azurite_workaround",
  "gcs",                                    # Stands for Google cloud storage.
  "dep:reqsign",
  "reqsign/services-google",
  "dep:reqwest",
]
testsuite = ["mockall"]
