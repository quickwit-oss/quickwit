[package]
name = "quickwit-indexing"
description = "Indexing service implementation"

version.workspace = true
edition.workspace = true
homepage.workspace = true
documentation.workspace = true
repository.workspace = true
authors.workspace = true
license.workspace = true

[dependencies]
anyhow = { workspace = true }
arc-swap = { workspace = true }
async-compression = { workspace = true }
async-trait = { workspace = true }
aws-sdk-kinesis = { workspace = true, optional = true }
aws-sdk-sqs = { workspace = true, optional = true }
bytes = { workspace = true }
bytesize = { workspace = true }
fail = { workspace = true }
flume = { workspace = true }
fnv = { workspace = true }
futures = { workspace = true }
google-cloud-auth = { workspace = true, optional = true }
google-cloud-gax = { workspace = true, optional = true }
google-cloud-googleapis = { workspace = true, optional = true }
google-cloud-pubsub = { workspace = true, optional = true }
itertools = { workspace = true }
libz-sys = { workspace = true, optional = true }
once_cell = { workspace = true }
oneshot = { workspace = true }
openssl = { workspace = true, optional = true }
pulsar = { workspace = true, optional = true }
quickwit-query = { workspace = true }
regex = { workspace = true }
rdkafka = { workspace = true, optional = true }
serde = { workspace = true }
serde_json = { workspace = true }
tantivy = { workspace = true }
tempfile = { workspace = true }
thiserror = { workspace = true }
time = { workspace = true }
tokio = { workspace = true }
tracing = { workspace = true }
ulid = { workspace = true }
utoipa = { workspace = true }
vrl = { workspace = true, optional = true }
warp = { workspace = true, optional = true }

quickwit-actors = { workspace = true }
quickwit-aws = { workspace = true }
quickwit-cluster = { workspace = true }
quickwit-common = { workspace = true }
quickwit-config = { workspace = true }
quickwit-directories = { workspace = true }
quickwit-doc-mapper = { workspace = true }
quickwit-ingest = { workspace = true }
quickwit-metastore = { workspace = true }
quickwit-opentelemetry = { workspace = true }
quickwit-proto = { workspace = true }
quickwit-storage = { workspace = true }

[features]
gcp-pubsub = [
  "dep:google-cloud-auth",
  "dep:google-cloud-gax",
  "dep:google-cloud-googleapis",
  "dep:google-cloud-pubsub",
]
gcp-pubsub-emulator-tests = []
kafka = ["rdkafka"]
kafka-broker-tests = []
kinesis = [
  "aws-sdk-kinesis",
  "quickwit-aws/kinesis",
]
kinesis-localstack-tests = []
pulsar = ["dep:pulsar"]
pulsar-broker-tests = []
queue-sources = []
sqs = [
  "aws-sdk-sqs",
  "queue-sources",
  "quickwit-aws/sqs",
]
sqs-test-helpers = ["warp"]
sqs-localstack-tests = ["sqs-test-helpers"]
vendored-kafka = [
  "kafka",
  "libz-sys/static",
  "openssl/vendored",
  "rdkafka/gssapi-vendored",
]
vendored-kafka-macos = ["kafka", "libz-sys/static", "openssl/vendored"]
testsuite = [
  "quickwit-actors/testsuite",
  "quickwit-cluster/testsuite",
  "quickwit-common/testsuite",
  "quickwit-config/testsuite",
  "quickwit-proto/testsuite",
  "quickwit-storage/testsuite"
]
vrl = ["dep:vrl", "quickwit-config/vrl"]
ci-test = []

[dev-dependencies]
bytes = { workspace = true }
criterion = { workspace = true, features = ["async_tokio"] }
mockall = { workspace = true }
proptest = { workspace = true }
prost = { workspace = true }
rand = { workspace = true }
reqwest = { workspace = true }
tempfile = { workspace = true }

quickwit-actors = { workspace = true, features = ["testsuite"] }
quickwit-cluster = { workspace = true, features = ["testsuite"] }
quickwit-common = { workspace = true, features = ["testsuite"] }
quickwit-config = { workspace = true, features = ["testsuite"] }
quickwit-doc-mapper = { workspace = true, features = ["testsuite"] }
quickwit-indexing = { workspace = true, features = ["testsuite"] }
quickwit-ingest = { workspace = true, features = ["testsuite"] }
quickwit-metastore = { workspace = true, features = ["testsuite"] }
quickwit-proto = { workspace = true, features = ["testsuite"] }
quickwit-storage = { workspace = true, features = ["testsuite"] }

[[test]]
name = "failpoints"
path = "failpoints/mod.rs"
required-features = ["fail/failpoints"]

[[bench]]
name = "doc_process_vrl_bench"
harness = false

[package.metadata.cargo-machete]
# used to vendor/static build native dependencies
ignored = ["libz-sys", "openssl"]
